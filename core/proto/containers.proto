syntax = "proto3";

option go_package = "dev.grizzly.proto.containers";

message ContainerImage {
    string canonical_url = 1;
}

message ContainerCheckpoint {
    string local_path = 1;
}

enum ContainerStatus {
    STARTING = 1;
    RUNNING = 2;
    CLOSING = 3;
    DEAD = 4;
    UNKNOWN = 5;
}

message StartRequest {
    ContainerImage container_image = 1;
    ContainerCheckpoint container_checkpoint = 2;
    repeated uint32 ports = 3;
}

message PortMapping {
    uint32 container_port = 1;
    uint32 exposed_port = 2;
}

message ContainerId {
    string id = 1;
}

message StartResponse {
    ContainerId id = 1;
    repeated PortMapping exposed_ports = 2;
}

message KillRequest {
    ContainerId id = 1;
}

message KillResponse {}

message InspectRequest {
    ContainerId id = 1;
}

message ContainerStatusChange {
    ContainerStatus status = 1;
    Timestamp at = 2;
}

message KeepAlive {
    Timestamp at = 1;
}

message InspectResponse {
    string docker_container_id = 1;
    repeated ContainerStatusChange status_log = 2;
    repeated PortMapping exposed_ports = 3;
    repeated KeepAlive keep_alive_log = 4;
}

service ContainerManager {
    rpc Start(StartRequest) returns (StartResponse);
    rpc Kill(KillRequest) returns (KillResponse);
    rpc Inspect(InspectRequest) returns (InspectResponse);
}